/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ghibli.interfaces;

import ghibli.modelo.Filme;
import ghibli.modelo.Cliente;
import ghibli.modelo.Locacao;
import ghibli.modelo.Item;
import ghibli.modelo.Venda;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
/**
 * Janela que mostra os itens adicionados ao carrinho.
 * @author Gabrielly
 */
public class CarrinhoFrame extends javax.swing.JFrame {

    private Cliente cliente;
    private ArrayList<Item> carrinho;
    private JList<String> listaItens;
    private JButton removerBtn, finalizarCompraBtn, finalizarLocacaoBtn, voltarBtn;
    
    public CarrinhoFrame(Cliente cliente, ArrayList<Item> carrinho) {
        this.cliente = cliente;
        this.carrinho = carrinho;

        setTitle("Carrinho - Ghibli Store");
        setSize(420, 430);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(null);

        listaItens = new JList<>();
        atualizarLista();
        JScrollPane scrollPane = new JScrollPane(listaItens);
        scrollPane.setBounds(30, 30, 340, 200);
        add(scrollPane);

        removerBtn = new JButton("Remover Item");
        removerBtn.setBounds(30, 240, 150, 30);
        add(removerBtn);

        finalizarCompraBtn = new JButton("Finalizar Compra");
        finalizarCompraBtn.setBounds(190, 240, 180, 30);
        add(finalizarCompraBtn);

        finalizarLocacaoBtn = new JButton("Finalizar Locação");
        finalizarLocacaoBtn.setBounds(30, 280, 340, 30);
        add(finalizarLocacaoBtn);

        voltarBtn = new JButton("Voltar");
        voltarBtn.setBounds(30, 320, 340, 30);
        add(voltarBtn);

        removerBtn.addActionListener(e -> {
            int idx = listaItens.getSelectedIndex();
            if (idx >= 0) {
                carrinho.remove(idx);
                atualizarLista();
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um item para remover.");
            }
        });

        finalizarCompraBtn.addActionListener(e -> {
            if (carrinho.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Carrinho vazio!");
                return;
            }

            double total = 0;
            for (Item item : carrinho) {
                total += item.getFilme().getValorVenda();
            }

            Venda venda = new Venda(cliente.getNome(), total, "1234-****", cliente.getEndereco());
            for (Item item : carrinho) {
                venda.realizarVenda(item);
            }

            JOptionPane.showMessageDialog(this,
                "Compra finalizada!\nItens: " + carrinho.size() +
                "\nTotal: R$ " + String.format("%.2f", total));

            carrinho.clear();
            atualizarLista();
        });

        finalizarLocacaoBtn.addActionListener(e -> {
            if (carrinho.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Carrinho vazio!");
                return;
            }

            String dataDevolucao = "15/06/2025";
            String cartao = "1234-****";
            String endereco = cliente.getEndereco();

            double total = 0;
            for (Item item : carrinho) {
                Filme filme = item.getFilme();
                double valor = filme.getValorLocacao();
                total += valor;

                Locacao locacao = new Locacao(
                    cliente.getNome(),
                    valor,
                    dataDevolucao,
                    cartao,
                    endereco
                );
                locacao.realizarLocacao(item);
            }

            JOptionPane.showMessageDialog(this,
                "Locação finalizada!\nItens: " + carrinho.size() +
                "\nTotal: R$ " + String.format("%.2f", total) +
                "\nDevolução até: " + dataDevolucao);

            carrinho.clear();
            atualizarLista();
        });

        voltarBtn.addActionListener(e -> {
            new CatalogoFrame(cliente).setVisible(true);
            dispose();
        });
    }

    private void atualizarLista() {
        String[] itensDesc = carrinho.stream()
            .map(item -> {
                Filme f = item.getFilme();
                return f.getTitulo() + " (" + f.getAno() + ") - R$ " + String.format("%.2f", f.getValorVenda());
            })
            .toArray(String[]::new);
        listaItens.setListData(itensDesc);    
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // </editor-fold>
@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Cliente cliente = new Cliente("Antônia", "antonia@gmail.com", "12345678901", "a", "senha123");
        ArrayList<Item> carrinho = new ArrayList<>();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarrinhoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarrinhoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarrinhoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarrinhoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarrinhoFrame(cliente, carrinho).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
