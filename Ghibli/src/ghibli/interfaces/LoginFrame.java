/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ghibli.interfaces;

import ghibli.modelo.Cliente;
import java.awt.event.*;
import java.util.ArrayList;
import javax.swing.*;
import ghibli.controlador.ControladorCliente;

/**
 * Janela inicial para entrar no Sistema.
 * Exige email e senha. 
 * Caso o usuário não tenha cadastro, ele é direcionado para a tela de cadastro.
 * 
 * @author Gabrielly
 */
public class LoginFrame extends javax.swing.JFrame {
    
    /**
     * Lista de clientes carregada da persistência.
     */
    private ControladorCliente controlador;
    
    /**
     * Campo para entrada do email do usuário.
     */
    private JTextField emailField;
    
    /**
     * Campo para entrada da senha do usuário.
     */
    private JPasswordField senhaField;
    
    /**
     * Botão para realizar o login.
     */
    private JButton loginButton;
    
    /**
     * Botão para realizar o cadastro.
     */
    private JButton cadastroButton;
    
    /**
     * Construtor da janela de login.
     * Configura a interface gráfica e os eventos dos botões.
     * @param listaClientes 
     */
    public LoginFrame(ControladorCliente controlador) {
        
        this.controlador = controlador;
        
        // Configurações da janela
        setTitle("Login - Ghibli Store");
        setSize(300, 200);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(null);
        
        // Label e campo para email
        JLabel emailLabel = new JLabel("Email:");
        emailLabel.setBounds(30, 30, 80, 25);
        add(emailLabel);

        emailField = new JTextField();
        emailField.setBounds(100, 30, 150, 25);
        add(emailField);

        // Label e campo para senha
        JLabel senhaLabel = new JLabel("Senha:");
        senhaLabel.setBounds(30, 70, 80, 25);
        add(senhaLabel);

        senhaField = new JPasswordField();
        senhaField.setBounds(100, 70, 150, 25);
        add(senhaField);

        // Botões de ação
        loginButton = new JButton("Entrar");
        loginButton.setBounds(30, 120, 100, 25);
        add(loginButton);

        cadastroButton = new JButton("Cadastrar");
        cadastroButton.setBounds(150, 120, 100, 25);
        add(cadastroButton);
        
        // Eventos de clique no botão "Entrar"
        loginButton.addActionListener(e -> {
            String email = emailField.getText();
            String senha = new String(senhaField.getPassword());

            ArrayList<Cliente> clientes = controlador.getClientes();
            for (Cliente c : clientes) {
                if (c.getEmail().equals(email) && c.getSenha().equals(senha)) {
                    JOptionPane.showMessageDialog(this, "Login bem-sucedido!");
                    // Abrir tela do catálogo
                    new CatalogoFrame(c).setVisible(true);
                    dispose();
                    return;
                }
            }
            JOptionPane.showMessageDialog(this, "Email ou senha inválidos.");
        });

        // Eventro de clique no botão "Cadastrar"
        cadastroButton.addActionListener(e -> {
            new CadastroFrame(controlador).setVisible(true);
            dispose();
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método principal que inicia a aplicação.
     * Cria uma lista vazia de clientes e abre a tela de login.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ControladorCliente controlador = new ControladorCliente();
                new LoginFrame(controlador).setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
